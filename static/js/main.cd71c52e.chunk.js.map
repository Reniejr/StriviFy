{"version":3,"sources":["reportWebVitals.js","_STORE/Spotify/constants.js","_STORE/User/constants.js","_STORE/index.js","_STORE/Spotify/reducers.js","_STORE/User/reducer.js","__UTILITIES/Spotify/index.js","__PAGES/2.LoginPage/LoginPage.jsx","__PAGES/1.Homepage/HomePage.jsx","_STORE/User/actions.js","__COMPONENTS/__MAIN/1.RouterWeb/RouterWeb.jsx","_STORE/Spotify/actions.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SPOTIFY_TOKEN","CREATE_USER","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","spotify","state","token","action","type","payload","user","userList","concat","createStore","applyMiddleware","thunk","clientId","process","authUrl","getAuthorized","location","href","LoginPage","username","password","toggle","redirect","setState","remember","console","log","localStorage","getItem","fillLogin","e","currentTarget","id","value","login","a","props","setItem","this","to","Container","src","alt","className","placeholder","onChange","style","backgroundColor","onClick","marginLeft","PureComponent","connect","HomePage","filter","users","length","createUser","dispatch","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","access_token","RouterWeb","setToken","path","exact","render","getState","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.cd71c52e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SPOTIFY_TOKEN = 'SPOTIFY_TOKEN';\r\n\r\n","export const CREATE_USER = 'CREATE_USER'","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport { spotifyReducer } from './Spotify/reducers'\r\nimport { userReducer } from './User/reducer'\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  spotify: spotifyReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composedEnhancer(applyMiddleware(thunk))\r\n);","import { SPOTIFY_TOKEN} from './constants'\r\n\r\nexport const spotifyReducer = (state = { token: null }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case SPOTIFY_TOKEN:\r\n            return {\r\n            ...state,\r\n            token: payload\r\n        }\r\n        default: return state\r\n    }\r\n}","import { CREATE_USER } from './constants'\r\n\r\nexport const userReducer = (state = { userList: [] }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case CREATE_USER:return{...state, userList:state.userList.concat(payload)}\r\n        default: return state\r\n    }\r\n}","//MAIN\r\nconst clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n    tokenUrl = process.env.REACT_APP_SPOTIFY_TOKEN_URL,\r\n    scopes = 'user-read-private%20user-read-email%20user-top-read',\r\n    authUrl = `${process.env.REACT_APP_SPOTIFY_AUTH_URL}?client_id=${clientId}&response_type=token&redirect_uri=${process.env.REACT_APP_SPOTIFY_REDIRECT_URI}&scope=${scopes}&show_dialog=true`\r\n\r\nexport const getRefreshToken = async () => {\r\n    const response = await fetch(tokenUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`)\r\n        },\r\n        body: 'grant_type=client_credentials',\r\n    }),\r\n        result = await response.json()\r\n    console.log(result)\r\n    return result.access_token\r\n}\r\n\r\nexport const getToken = () => {\r\n    const hash = window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(function(initial, item) {\r\n        if (item) {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\n    const token = hash.access_token\r\n    return token\r\n}\r\n\r\nexport const getAuthorized = () => {\r\n    window.location.href = authUrl\r\n}","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//REDUX IMPORTS\r\nimport { createUser } from \"../../_STORE/User/actions\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getAuthorized } from \"../../__UTILITIES/Spotify\";\r\n\r\n//STYLE\r\nimport \"./LoginPage.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   createUser: (user) =>\r\n//     dispatch((dispatch, getState) => {\r\n//       dispatch(createUser(user));\r\n//     }),\r\n// });\r\n\r\nclass LoginPage extends PureComponent {\r\n  state = {\r\n    user: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    toggle: false,\r\n    redirect: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    let toggle = !this.state.toggle;\r\n    this.setState({ toggle: !this.state.toggle });\r\n    if (toggle) {\r\n      this.remember();\r\n      console.log(localStorage.getItem(\"username\"));\r\n    }\r\n  };\r\n\r\n  fillLogin = (e) => {\r\n    let user = { ...this.state.user },\r\n      currentId = e.currentTarget.id;\r\n    user[currentId] = e.currentTarget.value;\r\n    this.setState({ user });\r\n  };\r\n\r\n  login = async () => {\r\n    if (this.props.spotify.token) {\r\n      this.setState({ redirect: true });\r\n    } else {\r\n      await getAuthorized();\r\n    }\r\n  };\r\n\r\n  remember = () => {\r\n    localStorage.setItem(\"username\", this.state.user.username);\r\n    localStorage.setItem(\"password\", this.state.user.password);\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div id=\"login-page\">\r\n          <Container>\r\n            <header>\r\n              <img src=\"./assets/spotify.png\" alt=\"\" />\r\n              <span>Strivify</span>\r\n            </header>\r\n            <button id=\"login-fb\">Log in with Facebook</button>\r\n            <div className=\"separator\">Or</div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={this.fillLogin}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.fillLogin}\r\n            />\r\n            <div className=\"remember\">\r\n              <span>Remember me</span>\r\n              <div\r\n                className=\"toggle-btn\"\r\n                style={{\r\n                  backgroundColor: this.state.toggle ? \"white\" : \"#0d0d0d\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"toggle\"\r\n                  onClick={() => this.toggle()}\r\n                  style={\r\n                    this.state.toggle\r\n                      ? { backgroundColor: \"#0d0d0d\", marginLeft: \"50%\" }\r\n                      : { backgroundColor: \"white\", marginLeft: \"\" }\r\n                  }\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <button id=\"login\" onClick={() => this.login()}>\r\n              Log In\r\n            </button>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//REDUX IMPORTS\r\nimport { createUser } from \"../../_STORE/User/actions\";\r\n\r\n//UTILITIES IMPORTS\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport LoginPage from \"../2.LoginPage/LoginPage\";\r\n\r\n//STYLE\r\nimport \"./HomePage.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createUser: (user) => dispatch(createUser(user)),\r\n});\r\n\r\nclass HomePage extends PureComponent {\r\n  componentDidMount() {\r\n    const user = {\r\n      username: localStorage.getItem(\"username\"),\r\n      password: localStorage.getItem(\"password\"),\r\n    };\r\n    if (\r\n      this.props.user.userList.filter(\r\n        (users) => users.username === user.username\r\n      ).length === 0 &&\r\n      user.username !== null\r\n    ) {\r\n      this.props.createUser(user);\r\n    }\r\n    console.log(user);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"home-page\">\r\n        {this.props.spotify.token === null ? <LoginPage /> : <p>Connected</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import { CREATE_USER } from './constants'\r\n\r\nexport const createUser = (user) => ({type:CREATE_USER, payload:{username:user.username, password:user.password}})","import React, { PureComponent } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport HomePage from \"../../../__PAGES/1.Homepage/HomePage\";\r\nimport LoginPage from \"../../../__PAGES/2.LoginPage/LoginPage\";\r\n\r\n//REDUX IMPORTS\r\nimport { setToken } from \"../../../_STORE/Spotify/actions\";\r\nimport { createUser } from \"../../../_STORE/User/actions\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getToken, getAuthorized } from \"../../../__UTILITIES/Spotify\";\r\n\r\n//STYLE\r\nimport \"./RouterWeb.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setToken: (token) =>\r\n    dispatch((dispatch, getState) => {\r\n      dispatch(setToken(token));\r\n    }),\r\n});\r\n\r\nconst token = getToken();\r\nwindow.location.hash = \"\";\r\n\r\nclass RouterWeb extends PureComponent {\r\n  componentDidMount() {\r\n    if (token) {\r\n      this.props.setToken(token);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Router id=\"router-web\">\r\n        <Switch>\r\n          <Route path=\"/\" exact render={(props) => <HomePage {...props} />} />\r\n          <Route\r\n            path=\"/login\"\r\n            exact\r\n            render={(props) => <LoginPage {...props} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RouterWeb);\r\n","import { SPOTIFY_TOKEN } from './constants'\r\n\r\nexport const setToken = (token) => ({type:SPOTIFY_TOKEN, payload:token})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n//REDUX\nimport { Provider } from 'react-redux';\nimport createStore from './_STORE'\n\n//PERSONAL COMPONENTS IMPORTS\nimport RouterWeb from './__COMPONENTS/__MAIN/1.RouterWeb/RouterWeb';\n\n//REDUX\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore}>\n      <RouterWeb/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
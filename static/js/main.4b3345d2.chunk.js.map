{"version":3,"sources":["reportWebVitals.js","_STORE/Spotify/constants.js","_STORE/User/constants.js","_STORE/index.js","_STORE/Spotify/reducers.js","_STORE/User/reducer.js","__UTILITIES/index.js","_STORE/User/actions.js","_STORE/Spotify/actions.js","__UTILITIES/Spotify/index.js","__PAGES/1.Homepage/HomePage.jsx","__COMPONENTS/__MAIN/2.General/General.jsx","__PAGES/2.LoginPage/LoginPage.jsx","__COMPONENTS/__MAIN/1.RouterWeb/RouterWeb.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SPOTIFY_TOKEN","URL_CODE","CREATE_USER","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","spotify","state","token","refresh_token","code","action","type","payload","user","userList","concat","createStore","applyMiddleware","thunk","getUser","query","a","url","process","fetch","response","json","result","console","log","createUser","username","password","setToken","clientId","credentialsDecrypt","btoa","tokenUrl","redirect_URI","authUrl","encodeURIComponent","getRefreshToken","expiredToken","method","headers","body","access_token","getAuthToken","getAuthorized","location","href","getCode","URLSearchParams","document","search","substring","get","HomePage","localStorage","getItem","this","props","filter","users","length","id","onClick","PureComponent","connect","dispatch","ToastDev","toastState","close","Toast","style","opacity","Header","src","className","alt","width","height","Body","children","ToggleBtn","toggleState","toggleAction","backgroundColor","marginLeft","React","LogoStart","LoginPage","toggle","start","redirect","setState","remember","fillLogin","e","currentTarget","value","toastShow","closeToast","login","tokens","setItem","componentDidMount","setCode","setTimeout","to","Container","placeholder","onChange","getState","getURLCode","RouterWeb","path","exact","render","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.4b3345d2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SPOTIFY_TOKEN = 'SPOTIFY_TOKEN';\r\nexport const URL_CODE = 'URL_CODE';\r\n\r\n","export const CREATE_USER = 'CREATE_USER'","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport { spotifyReducer } from './Spotify/reducers'\r\nimport { userReducer } from './User/reducer'\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  spotify: spotifyReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composedEnhancer(applyMiddleware(thunk))\r\n);","import { SPOTIFY_TOKEN, URL_CODE} from './constants'\r\n\r\nexport const spotifyReducer = (state = { token: null, refresh_token: null, code: null }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case SPOTIFY_TOKEN:\r\n            return {\r\n            ...state,\r\n                token: payload.token,\r\n            refresh_token: payload.refresh_token\r\n            }\r\n        case URL_CODE:\r\n            return {\r\n                ...state,\r\n                code: payload\r\n            }\r\n        default: return state\r\n    }\r\n}","import { CREATE_USER } from './constants'\r\n\r\nexport const userReducer = (state = { userList: [] }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case CREATE_USER:return{...state, userList:state.userList.concat(payload)}\r\n        default: return state\r\n    }\r\n}","//FETCH\r\nexport const getUser = async (query) => {\r\n    let url\r\n    query\r\n        ? url = `${process.env.REACT_APP_STRIVIFY_DB_ONLINE}/strivify/user?${query}`\r\n        : url = `${process.env.REACT_APP_STRIVIFY_DB_ONLINE}/strivify/user`\r\n    const response = await fetch(url),\r\n        result = await response.json()\r\n    console.log(result)\r\n    return result\r\n}","import { CREATE_USER } from './constants'\r\n\r\nexport const createUser = (user) => ({type:CREATE_USER, payload:{username:user.username, password:user.password}})","import { SPOTIFY_TOKEN, URL_CODE } from './constants'\r\n\r\nexport const getURLCode = (code) => ({type: URL_CODE, payload: code})\r\nexport const setToken = (token) => ({type:SPOTIFY_TOKEN, payload:token})","//MAIN\r\nconst clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    \r\n    clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET,\r\n\r\n    credentialsDecrypt = 'Basic ' + btoa(`${clientId}:${clientSecret}`),\r\n\r\n    tokenUrl = process.env.REACT_APP_SPOTIFY_TOKEN_URL,\r\n\r\n    scopes = 'user-read-private%20user-read-email%20user-top-read',\r\n\r\n    // redirect_URI = process.env.REACT_APP_SPOTIFY_REDIRECT_URI,\r\n    // //ONLINE\r\n    redirect_URI = process.env.REACT_APP_SPOTIFY_REDIRECT_URI_ONLINE,\r\n\r\n    authUrl = `${process.env.REACT_APP_SPOTIFY_AUTH_URL}?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirect_URI)}&scope=${scopes}&state=34fFs29kd09`\r\n\r\n//REFRESH TOKEN\r\nexport const getRefreshToken = async (expiredToken) => {\r\n    const response = await fetch(tokenUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': credentialsDecrypt\r\n        },\r\n        body: `grant_type=refresh_token&refresh_token=${expiredToken}`,\r\n    }),\r\n        result = await response.json()\r\n    // console.log(result)\r\n    return result.access_token\r\n}\r\n\r\n//GET TOKEN\r\nexport const getAuthToken = async (code) => {\r\n    const response = await fetch(tokenUrl, {\r\n        method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': credentialsDecrypt\r\n        },\r\n        body: `grant_type=authorization_code&code=${code}&redirect_uri=${encodeURIComponent(redirect_URI)}`\r\n    })\r\n    const result = await response.json()\r\n    // console.log(result)\r\n    return result\r\n}\r\n\r\n//GET AUTHORIZED\r\nexport const getAuthorized = async () => {\r\n    window.location.href = authUrl\r\n}\r\n\r\n//GET CODE\r\nexport const getCode = () => {\r\n    let params = new URLSearchParams(document.location.search.substring(1)),\r\n      code = params.get(\"code\");\r\n    // console.log(code);\r\n    return code;\r\n  };","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//REDUX IMPORTS\r\nimport { createUser } from \"../../_STORE/User/actions\";\r\nimport { setToken } from \"../../_STORE/Spotify/actions\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getRefreshToken } from \"../../__UTILITIES/Spotify\";\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\n\r\n//STYLE\r\nimport \"./HomePage.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createUser: (user) => dispatch(createUser(user)),\r\n  setToken: (token) => dispatch(setToken(token)),\r\n});\r\n\r\nclass HomePage extends PureComponent {\r\n  componentDidMount() {\r\n    const user = {\r\n      username: localStorage.getItem(\"username\"),\r\n      password: localStorage.getItem(\"password\"),\r\n    };\r\n    if (\r\n      this.props.user.userList.filter(\r\n        (users) => users.username === user.username\r\n      ).length === 0 &&\r\n      user.username !== null\r\n    ) {\r\n      this.props.createUser(user);\r\n    }\r\n    // console.log(user);\r\n  }\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div id=\"home-page\">\r\n        <button onClick={() => getRefreshToken(this.props.spotify.token)}>\r\n          get refresh token\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//REACT BOOTSTRAP\r\nimport { Toast } from \"react-bootstrap\";\r\n\r\n//STYLE\r\nimport \"./General.scss\";\r\n\r\n//TOAST\r\nexport class ToastDev extends PureComponent {\r\n  render() {\r\n    let { toastState, close } = this.props;\r\n    return (\r\n      <Toast style={{ opacity: toastState ? \"1\" : \"0\" }}>\r\n        <Toast.Header>\r\n          <img\r\n            src=\"./assets/spotify.png\"\r\n            className=\"rounded mr-2\"\r\n            alt=\"\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />\r\n          <strong className=\"mr-auto\">Strivify</strong>\r\n          <button onClick={close}>x</button>\r\n        </Toast.Header>\r\n        <Toast.Body>{this.props.children}</Toast.Body>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\n//TOGGLE\r\nexport class ToggleBtn extends React.PureComponent {\r\n  render() {\r\n    const { toggleState, toggleAction } = this.props;\r\n    return (\r\n      <div\r\n        className=\"toggle-btn\"\r\n        style={{\r\n          backgroundColor: toggleState ? \"white\" : \"#0d0d0d\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"toggle\"\r\n          onClick={toggleAction}\r\n          style={\r\n            toggleState\r\n              ? { backgroundColor: \"#0d0d0d\", marginLeft: \"50%\" }\r\n              : { backgroundColor: \"white\", marginLeft: \"\" }\r\n          }\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//LOGO START\r\nexport class LogoStart extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"logo\">\r\n        <img src=\"./assets/spotify.png\" alt=\"\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// REACT BOOTSTRAP\r\n\r\n//REDUX IMPORTS\r\nimport { createUser } from \"../../_STORE/User/actions\";\r\nimport { setToken, getURLCode } from \"../../_STORE/Spotify/actions\";\r\n\r\n//UTILITIES IMPORTS\r\nimport {\r\n  getAuthorized,\r\n  getAuthToken,\r\n  getRefreshToken,\r\n  getCode,\r\n} from \"../../__UTILITIES/Spotify\";\r\n\r\n//STYLE\r\nimport \"./LoginPage.scss\";\r\nimport {\r\n  ToggleBtn,\r\n  ToastDev,\r\n  LogoStart,\r\n} from \"../../__COMPONENTS/__MAIN/2.General/General\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createUser: (user) =>\r\n    dispatch((dispatch, getState) => {\r\n      dispatch(createUser(user));\r\n    }),\r\n  setToken: (token) =>\r\n    dispatch((dispatch, getState) => {\r\n      dispatch(setToken(token));\r\n    }),\r\n  setCode: (code) => dispatch(getURLCode(code)),\r\n});\r\n\r\nclass LoginPage extends PureComponent {\r\n  state = {\r\n    user: {\r\n      username: null,\r\n      password: null,\r\n    },\r\n    toggle: false,\r\n    toastState: false,\r\n    start: true,\r\n    redirect: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    let toggle = !this.state.toggle;\r\n    this.setState({ toggle: !this.state.toggle });\r\n    if (toggle) {\r\n      this.remember();\r\n      console.log(localStorage.getItem(\"username\"));\r\n    }\r\n  };\r\n\r\n  fillLogin = (e) => {\r\n    let user = { ...this.state.user },\r\n      currentId = e.currentTarget.id;\r\n    user[currentId] = e.currentTarget.value;\r\n    this.setState({ user });\r\n    if (!this.state.user.password) {\r\n      this.closeToast();\r\n    } else {\r\n      this.toastShow();\r\n    }\r\n  };\r\n\r\n  login = async () => {\r\n    let tokens = await getAuthToken(this.props.spotify.code);\r\n    // console.log(tokens.refresh_token);\r\n    tokens = await {\r\n      token: tokens.access_token,\r\n      refresh_token: tokens.refresh_token,\r\n    };\r\n    this.props.setToken(tokens);\r\n    await this.setState({ redirect: true });\r\n  };\r\n\r\n  getRefreshToken = () => {\r\n    getRefreshToken();\r\n  };\r\n\r\n  remember = () => {\r\n    localStorage.setItem(\"username\", this.state.user.username);\r\n    localStorage.setItem(\"password\", this.state.user.password);\r\n  };\r\n\r\n  toastShow = () => {\r\n    this.setState({ toastState: true });\r\n  };\r\n\r\n  closeToast = () => {\r\n    this.setState({ toastState: false });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const code = getCode();\r\n    this.props.setCode(code);\r\n    if (code) {\r\n      this.setState({ start: false });\r\n      console.log(this.props);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({ start: false });\r\n        getAuthorized();\r\n      }, 1800);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/home\" />;\r\n    } else {\r\n      return (\r\n        <div id=\"login-page\">\r\n          {this.state.start ? (\r\n            <LogoStart />\r\n          ) : (\r\n            <Container>\r\n              <header>\r\n                <img src=\"./assets/spotify.png\" alt=\"\" />\r\n                <span>Strivify</span>\r\n              </header>\r\n              <button id=\"login-fb\">Log in with Facebook</button>\r\n              <div className=\"separator\">Or</div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                placeholder=\"Username\"\r\n                onChange={this.fillLogin}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={this.fillLogin}\r\n              />\r\n              <div className=\"remember\">\r\n                <span>Remember me</span>\r\n                <ToastDev\r\n                  toastState={this.state.toastState}\r\n                  close={this.closeToast}\r\n                >\r\n                  Click here to create an account on our database\r\n                </ToastDev>\r\n                <ToggleBtn\r\n                  toggleState={this.state.toggle}\r\n                  toggleAction={this.toggle}\r\n                />\r\n              </div>\r\n              <button id=\"login\" onClick={() => this.login()}>\r\n                Log In\r\n              </button>\r\n            </Container>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { PureComponent } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getUser } from \"../../../__UTILITIES\";\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport HomePage from \"../../../__PAGES/1.Homepage/HomePage\";\r\nimport LoginPage from \"../../../__PAGES/2.LoginPage/LoginPage\";\r\n\r\n//REDUX IMPORTS\r\n\r\n//UTILITIES IMPORTS\r\n\r\n//STYLE\r\nimport \"./RouterWeb.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nclass RouterWeb extends PureComponent {\r\n  componentDidMount = async () => {\r\n    getUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Router id=\"router-web\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/home\"\r\n            exact\r\n            render={(props) => <HomePage {...props} />}\r\n          />\r\n          <Route path=\"/\" exact render={(props) => <LoginPage {...props} />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(RouterWeb);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n//REDUX\nimport { Provider } from 'react-redux';\nimport createStore from './_STORE'\n\n//PERSONAL COMPONENTS IMPORTS\nimport RouterWeb from './__COMPONENTS/__MAIN/1.RouterWeb/RouterWeb';\n\n//REDUX\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore}>\n      <RouterWeb/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}